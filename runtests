#!/usr/bin/env bash

set -o errexit
set -o pipefail

if [[ $# -gt 1 && $1 = --env ]]; then
  echo "Running isolated with env ${2}"
  exec env -i HOME="${HOME}" PATH="${PATH}" \
    BUNDLE_GEMFILE="${BUNDLE_GEMFILE}" \
    BUNDLE_BIN_PATH="${BUNDLE_BIN_PATH}" \
    BUNDLE_ORIG_PATH="${BUNDLE_ORIG_PATH}" \
    RUBYLIB="${RUBYLIB}" \
    RUBYOPT="${RUBYOPT}" \
    TERM="${TERM}" \
    LANG="${LANG}" \
    bash -c "source '${2}' && bash ${BASH_SOURCE[0]}"
fi

for f in $(git ls-files '*.json'); do
  echo -en "$f "
  python -m json.tool <"${f}" >/dev/null
  echo "✓"
done

for f in $(git ls-files '*Makefile'); do
  echo -en "${f} "
  make -f "${f}" -p >/dev/null
  echo "✓"
done

echo 'Running shellcheck'
git grep -l '^#!/usr/bin/env bash' | grep -v '.tpl$' | xargs shellcheck

echo 'Running shfmt'
git grep -l '^#!/usr/bin/env bash' | grep -v '.tpl$' | xargs shfmt -i 2 -w

for d in $(git ls-files '*.tf' | xargs -n1 dirname | sort | uniq); do
  echo -en "${d} "
  terraform validate "${d}"
  echo "✓"
done

rubocop
