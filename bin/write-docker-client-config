#!/usr/bin/env ruby

require 'optparse'
require 'pathname'
require 'tempfile'

def main
  options = {
    ca_pem: '',
    key_pem: '',
    cert_pem: '',
    enc_config: '',
    out: 'out.tar.bz2.enc'
  }

  OptionParser.new do |opts|
    opts.on('--ca-pem=CA_PEM', String) do |v|
      options[:ca_pem] = v.strip
    end

    opts.on('--key-pem=KEY_PEM', String) do |v|
      options[:key_pem] = v.strip
    end

    opts.on('--cert-pem=CERT_PEM', String) do |v|
      options[:cert_pem] = v.strip
    end

    opts.on('--enc-config=ENC_CONFIG', String) do |v|
      options[:enc_config] = v.strip
    end

    opts.on('--out=OUTPUT_FILE', String) do |v|
      options[:out] = v.strip
    end
  end.parse!

  options.clone.each do |key, value|
    fail "missing value for --#{key}" if value.strip.empty?
    options[key] = Pathname.new(value)
  end

  %i[ca_pem key_pem cert_pem enc_config].each do |fileopt|
    unless options[fileopt].exist?
      fail "missing file for --#{key.to_s.gsub('_', '-')}"
    end
  end

  enc_iv = options[:enc_config].join('openssl-iv').read.strip
  enc_key = options[:enc_config].join('openssl-key').read.strip
  enc_salt = options[:enc_config].join('openssl-salt').read.strip

  tmpdir = Pathname.new(
    Dir.mktmpdir(%w[terraform-config- -docker-client-config])
  )

  dest = options[:out].expand_path
  config_dir = tmpdir.join(options[:out].basename('.tar.bz2.enc'))
  config_dir.mkpath
  config_dir.join('ca.pem').write(options[:ca_pem].read)
  config_dir.join('cert.pem').write(options[:cert_pem].read)
  config_dir.join('key.pem').write(options[:key_pem].read)

  Dir.chdir(tmpdir.to_s) do
    tbz_out = options[:out].basename('.enc')

    unless system(
      "tar -cjf #{options[:out].basename('.enc')} #{config_dir.basename}"
    )
      fail "could not create #{tbz_out}"
    end

    unless system(
      %W[
        openssl enc
          -aes-256-cbc
          -in #{tbz_out}
          -out #{dest}
          -K #{enc_key}
          -S #{enc_salt}
          -iv #{enc_iv}
      ].join(' ')
    )
      fail "could not create #{options[:out]}"
    end
  end

  0
end

exit(main) if $PROGRAM_NAME == __FILE__
