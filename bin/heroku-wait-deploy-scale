#!/usr/bin/env ruby
require 'optparse'

require_relative '../lib/heroku_client'

def main
  options = {
    repo_slug: '',
    heroku_app: '',
    ps_scale: [],
    version: 'master'
  }

  OptionParser.new do |opts|
    opts.on(
      '-r', '--repo=REPO_SLUG'
    ) { |v| options[:repo_slug] = v.strip }

    opts.on(
      '-a', '--app=HEROKU_APP'
    ) { |v| options[:heroku_app] = v.strip }

    opts.on(
      '-p', '--ps-scale=PS_SCALE'
    ) { |v| options[:ps_scale] += v.split(/[ ,]/).map(&:strip) }

    opts.on(
      '-V', '--deploy-version=VERSION'
    ) { |v| options[:version] = v.strip }
  end.parse!

  fail 'Missing HEROKU_API_KEY' unless ENV.key?('HEROKU_API_KEY')

  heroku = HerokuClient.new(api_key: ENV.fetch('HEROKU_API_KEY'))

  unless heroku.wait(options.fetch(:heroku_app))
    $stderr.puts "---> timeout waiting for app=#{options.fetch(:heroku_app)}"
    return 1
  end

  heroku.deploy(
    options.fetch(:repo_slug),
    options.fetch(:heroku_app),
    options.fetch(:version)
  )
  heroku.scale(
    options.fetch(:heroku_app),
    options.fetch(:ps_scale)
  )

  0
end

exit(main) if $PROGRAM_NAME == __FILE__
